prob <- predict(mod1.auto)
pred <- prediction(prob, sah$arrest)
prob <- predict(mod1)
pred <- prediction(prob, Rossi$arrest)
perf <- performance(pred, "tpr", "fpr")
# I know, the following code is bizarre. Just go with it.
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) + geom_abline(intercept = 0, slope = 1, colour = "gray")+
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc))
library(ResourceSelection)
hoslem.test(Rossi$arrest, fitted(mod1), g=10)
mod2 <- glm(arrrest ~ (fin+ prio)*age, , family="binomial", data=Rossi
library(ggplot2)
mod1 <- glm(arrest ~ fin + prio + age, family="binomial", data=Rossi)
mod2 <- glm(arrrest ~ (fin+ prio)*age, , family="binomial", data=Rossi
library(ggplot2)
mod1 <- glm(arrest ~ fin + prio + age, family="binomial", data=Rossi)
mod2 <- glm(arrrest ~ (fin+ prio)*age,  family="binomial", data=Rossi )
mod1 <- glm(arrest ~ fin + prio + age, family="binomial", data=Rossi)
mod2 <- glm(arrest ~ (fin+ prio)*age,  family="binomial", data=Rossi )
library(ggplot2)
library(ROCR)
prob <- predict(mod2)
pred <- prediction(prob, Rossi$arrest)
perf <- performance(pred, "tpr", "fpr")
# I know, the following code is bizarre. Just go with it.
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) + geom_abline(intercept = 0, slope = 1, colour = "gray")+
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc))
url <- "http://socserv.mcmaster.ca/jfox/Books/Companion/data/Rossi.txt"
Rossi <- read.table(url, header=TRUE)
Rossi$age.cat <- cut(Rossi$age, c(0, 19, 25, 30, Inf))
mod1 <- glm(arrest ~ fin + prio + age, family="binomial", data=Rossi)
mod2 <- glm(arrest ~ (fin+ prio)*age.cat,  family="binomial", data=Rossi )
library(ggplot2)
library(ROCR)
prob <- predict(mod2)
pred <- prediction(prob, Rossi$arrest)
perf <- performance(pred, "tpr", "fpr")
# I know, the following code is bizarre. Just go with it.
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) + geom_abline(intercept = 0, slope = 1, colour = "gray")+
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc))
mod1 <- glm(arrest ~ fin + prio + age.cat, family="binomial", data=Rossi)
library(ggplot2)
library(ROCR)
prob <- predict(mod1)
pred <- prediction(prob, Rossi$arrest)
perf <- performance(pred, "tpr", "fpr")
# I know, the following code is bizarre. Just go with it.
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) + geom_abline(intercept = 0, slope = 1, colour = "gray")+
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc))
mod2 <- glm(arrest ~ fin + prio + age.cat, family="poisson", data=Rossi)
library(broom)
library(knitr)
kable(tidy(mod2, exponentiate = T, conf.int = T)[,-c(3,4)], method="latex")
mod3 <- glm(arrest ~ fin * prio + age.cat, family="poisson", data=Rossi)
library(broom)
library(knitr)
kable(tidy(mod3, exponentiate = T, conf.int = T)[,-c(3,4)], method="latex")
anova(mod2, mod3)
kable(glance(mod3), method="latex")
mod4 <- coxph(Surv(week, arrest) ~ fin * prio + age.cat, data=subset(Rossi, week>0))
kable(tidy(mod4, exponentiate = T, conf.int = T)[,-c(3,4)], method="latex")
kable(tidy(mod4)[,-c(3,4)], method="latex")
, exponentiate =
kable(tidy(mod4, exponentiate = T)[,-c(3,4)], method="latex")
kable(glance(mod4), method="latex")
kable(glance(mod4), method="latex")
kable(glance(mod4), method="latex")[,-c(4:7)]
kable(glance(mod4)[,-c(4:7)], method="latex")
kable(glance(mod4)[,-c(4:10)], method="latex")
kable(glance(mod4)[,-c(5:10)], method="latex")
kable(glance(mod4)[,-c(5:10)], method="latex")
cox.zph(mod4)
kable(glance(mod4)[,-c(5:10)], method="latex")
cox.zph(mod4)
kable(cox.zph(mod4), method="latex")
cox.zph(mod4)
library(survival)
mod4 <- coxph(Surv(week, arrest) ~ fin * prio + age, data=subset(Rossi, week>0))
glm(arrest ~ fin * prio + age.cat, family="poisson", data=Rossi)
library(broom)
library(knitr)
kable(tidy(mod4, exponentiate = T)[,-c(3,4)], method="latex")
mod6 <- coxph(Surv(week, arrest) ~ fin * prio + strata(age.cat), data=subset(Rossi, week>0))
kable(tidy(mod6, exponentiate = T)[,-c(3,4)], method="latex")
3+3+3+2+2+2+6+6+6
3+3+3+2+2+2+6+6+4+10+10+10+10
3+3+3+2+4+2+2+6+6+4
install.packages("ROCR")
install.packages("ROCR")
library(slidify)
getwd()
slidify("Notes/lect-01-intro.Rmd")
slidify("Notes/lect-02a-ggplot.Rmd")
slidify("Notes/lect-02b-tidying.Rmd")
slidify("Notes/lect-03-transforming.Rmd")
slidify("Notes/lect-03-transforming.Rmd")
library(slidify)
slidify("Notes/lect-02a-ggplot.Rmd")
ggplot(data=comic_characters, aes(x=align, y=log_app)) +
geom_point(aes(alpha=year))
slidify("Notes/lect-02-ggplot.Rmd")
slidify("Notes/lect-03-transforming.Rmd")
head(gapminder)
gapminder %>%
select(country, lifeExp) %>%
arrange(lifeExp)
gapminder %>%
group_by(country) %>%
summarise_each(funs(min(., na.rm=TRUE), max(., na.rm=TRUE)), lifeExp)
gapminder %>%
group_by(country) %>%
summarise_all(funs(min(., na.rm=TRUE), max(., na.rm=TRUE)), lifeExp)
gapminder %>%
group_by(country) %>%
summarise_at(funs(min(., na.rm=TRUE), max(., na.rm=TRUE)), lifeExp)
?summarise_each
gapminder
gapminder %>%
select(country, gdpPercap, pop) %>%
transmute(gdp = gdpPercap*pop)
slidify("Notes/lect-04-further-sums.Rmd")
slidify("Notes/lect-04-further-sums.Rmd")
slidify("Notes/lect-04-further-sums.Rmd")
gapminder %>%
group_by(year) %>%
tally()
gapminder %>%
count(year)
gapminder %>% group_by(year) %>% tally(sort=TRUE)
gapminder %>% count_(year, sort=TRUE)
?count_()
gapminder %>% count_(year, sort=TRUE)
count_(gapminder, year)
slidify("Notes/lect-04-further-sums.Rmd")
gapminder <- gapminder %>%
mutate(gdp=gdpPercap*pop)
gapminder
gapminder
slidify("Notes/lect-04-further-sums.Rmd")
slidify("Notes/lect-04-further-sums.Rmd")
gapminder %>%
group_by(continent)
summarise(total_gdp = sum(gdp))
slidify("Notes/lect-04-further-sums.Rmd")
slidify("Notes/lect-04-further-sums.Rmd")
slidify("Notes/lect-04-further-sums.Rmd")
library(readr)
hug_urm_firstgen_biostat <- read_csv("C:/Users/sullivanstats/Downloads/hug-urm-firstgen-biostat.csv")
View(hug_urm_firstgen_biostat)
names(hug_urm_firstgen_biostat)
hug_urm_firstgen_biostat %>% table(race_hispanic)
hug_urm_firstgen_biostat %>% group_by(race_hispanic) %>% tally()
hug_urm_firstgen_biostat %>% filter(race_hispanic=="Yes")
hug_urm_firstgen_biostat %>% filter(race_hispanic=="Yes") %>% select(cas_id, last_name, first_name)
hispanic <- hug_urm_firstgen_biostat %>% filter(race_hispanic=="Yes") %>% select(cas_id, last_name, first_name)
hug_urm_firstgen_biostat %>% group_by(race_cuban) %>% tally()
hug_urm_firstgen_biostat %>% group_by(race_mexican) %>% tally()
hug_urm_firstgen_biostat %>% filter(race_mexican=="Yes") %>% select(cas_id, last_name, first_name)
hug_urm_firstgen_biostat %>% filter(race_south_american=="Yes") %>% select(cas_id, last_name, first_name)
hug_urm_firstgen_biostat %>% filter(race_american_indian=="Yes") %>% select(cas_id, last_name, first_name)
hug_urm_firstgen_biostat %>% filter(race_pacific_islander=="Yes") %>% select(cas_id, last_name, first_name)
hug_urm_firstgen_biostat %>% filter(race_black=="Yes") %>% select(cas_id, last_name, first_name)
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-01-intro.Rmd")
slidify("Notes/lect-02-ggplot.Rmd")
warnings()
slidify("Notes/lect-02-ggplot.Rmd")
slidify("Notes/lect-02-ggplot.Rmd")
slidify("Notes/lect-02-ggplot.Rmd")
slidify("Notes/lect-02-ggplot.Rmd")
slidify("Notes/lect-02-ggplot.Rmd")
library(slidify)
library(ggplot2)
library(fivethiryeight)
require(tidyverse)
library(broom)
?tidy
install.packages("slidify")
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
library(devtools)
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
install.packages(c("ggplot2", "broom"))
install.packages(c("fivethirtyeight"))
library(slidify)
slidify("Notes/lect-07-multiple-linear")
slidify("Notes/lect-07-multiple-linear.Rmd")
install.packages("kable")
?kable
library(readr)
library(tidyverse)
bikes <- read_csv("../Notes/Data/bike_sharing.csv") %>%
mutate(season = as.factor(season)) %>%
mutate(weather=as.factor(weather))
library(readr)
library(tidyverse)
bikes <- read_csv("Notes/Data/bike_sharing.csv") %>%
mutate(season = as.factor(season)) %>%
mutate(weather=as.factor(weather))
mod.final <- lm(count~season+weather+humidity+windspeed, data=bikes)
tidy(mod.final)[-1,-c(3:4)]
glance(mod.final)
mod.final <- lm(count~season+weather+humidity+windspeed, data=bikes)
kable(tidy(mod.final)[-1,-c(3:4)])
library(knitr)
mod1 <- lm(count~season+weather+humidity+windspeed, data=bikes)
mod2 <- lm(count~weather+humidity+windspeed, data=bikes)
anova(mod1, mod2)
tidy(anova(mod1, mod2))
mod1 <- lm(count~season+weather+humidity+windspeed, data=bikes)
mod2 <- lm(count~weather+humidity+windspeed, data=bikes)
anova(mod1, mod2)
install.packages("oslrr")
install.packages("olsrr")
library(cmprsk)
?cuminc
fit.bin <- glm(chd69 ~ arcus, data=wcgs, family=binomial(link="logit"))
install.packages("pander")
?pander
?pandoc.table
library(pander)
?pandoc.table
5*7139
4*7139
9*7139
9*7139*.85
12*7139*.85
library(knitr)
options(digits=3)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=TRUE)
knitr::opts_chunk$set(echo=FALSE)
cigs <- read.table("http://www.amstat.org/publications/jse/datasets/cigarettes.dat.txt")
names(cigs) <- c("brand", "tar", "nicotine", "weight", "CO" )
library(tidyverse)
library(broom)
library(knitr)
fit1 <- lm(CO ~tar, data=cigs)
fit2 <- lm(CO ~nicotine, data=cigs)
fit3 <- lm(CO ~weight, data=cigs)
tidy1 <- tidy(fit1, conf.int=T)[-1,-c(3:4)]
tidy2 <- tidy(fit2, conf.int=T)[-1,-c(3:4)]
tidy3 <- tidy(fit3, conf.int=T)[-1,-c(3:4)]
kable(bind_rows(tidy1,tidy2,tidy3), format = "latex")
glance1 <- glance(fit1)
glance2 <- glance(fit2)
glance3 <- glance(fit3)
tab <- bind_rows(glance1,glance2,glance3)[,c(1:5)]
rownames(tab) <- c("tar", "nicotine", "weight")
kable(tab, format = "latex")
fit4 <- lm(CO ~tar+nicotine+weight, data=cigs)
tidy4 <- tidy(fit4, conf.int=T)[-1,-c(3:4)]
kable(tidy4, format = "latex")
glance4 <- glance(fit4)
kable(glance4[,c(1:5)], format = "latex")
library(car)
vif(fit4)
library(tidyverse)
cigs <- cigs %>%
mutate(nicotine_bin = cut(nicotine, 2, labels=c("low", "high")))
fit5 <- lm(data=cigs, CO~tar*nicotine_bin)
kable(tidy(fit5, conf.int=T)[,-c(3:4)], format = "latex")
fit6 <- lm(data=cigs, CO~tar+nicotine_bin)
anova(fit5,fit6)
kable(glance(fit5)[,c(1:5)], format = "latex")
kable(vif(fit5))
library(car)
kable(vif(fit4))
install.packages("ResourceSelection")
install.packages("MASS")
install.packages("ROCR")
View(glance1)
library(survey)
data()
install.packages("GGally")
install.packages("survminer")
exp(-0.07746)
install.packages("SurvRegCensCov")
devtools::install_github('alanarnholt/BSDA')
install.packages("dslabs")
install.packages('C:/Users/Desktop/rvest-master.zip', lib='C:/Users/adam_/Documents/R/win-library/3.5',repos = NULL)
install.packages('C:/Users/Desktop/gganimate-0.1.1.zip', lib='C:/Users/adam_/Documents/R/win-library/3.5',repos = NULL)
install.packages('C:/Users/adam_/Desktop/gganimate-0.1.1.zip', lib='C:/Users/adam_/Documents/R/win-library/3.5',repos = NULL)
remove.packages("gganimate", lib="~/R/win-library/3.5")
install.packages('C:/Users/adam_/Desktop/gganimate-0.1.1.zip', lib='C:/Users/adam_/Documents/R/win-library/3.5',repos = NULL)
install.packages("C:/Users/adam_/Downloads/gganimate-0.1.1.tar.gz", repos = NULL, type="source")
install.packages("C:/Users/adam_/Downloads/gganimate-0.1.1.tar.gz", repos = NULL, type="source", repos=NULL)
?install.packages
install.packages("C:/Users/adam_/Downloads/gganimate-0.1.1.tar.gz", repos = NULL, type="source", dependencies = FALSE)
install.packages("animation")
install.packages("C:/Users/adam_/Downloads/gganimate-0.1.1.tar.gz", repos = NULL, type="source", dependencies = FALSE)
library(broom)
fit <- loess(margin ~ day, degree=1, span = span, data=polls_2008)
loess_fit <- augment(fit)
if(!file.exists(file.path("loess-animation.gif"))){
p <- ggplot(tmp, aes(day, margin)) +
scale_size(range = c(0, 3)) +
geom_smooth(aes(group = center, frame = center, weight = weight), method = "lm", se = FALSE) +
geom_point(data = polls_2008, size = 3, alpha = .5, color = "grey") +
geom_point(aes(size = weight, frame = center)) +
geom_line(aes(x=day, y = .fitted, frame = day, cumulative = TRUE),
data = loess_fit, color = "red")
gganimate(p, filename = file.path("loess-animation.gif"), interval= .1)
}
if(knitr::is_html_output()){
knitr::include_graphics(file.path("loess-animation.gif"))
} else{
centers <- quantile(tmp$center, seq(1,6)/6)
tmp_loess_fit <- crossing(center=centers, loess_fit) %>%
group_by(center) %>%
filter(day <= center) %>%
ungroup()
tmp %>% filter(center %in% centers) %>%
ggplot() +
geom_smooth(aes(day, margin), method = "lm", se = FALSE) +
geom_point(aes(day, margin, size = weight), data = polls_2008, size = 3, alpha = .5, color = "grey") +
geom_point(aes(day, margin)) +
geom_line(aes(x=day, y = .fitted), data = tmp_loess_fit, color = "red") +
facet_wrap(~center, nrow = 2)
}
install.packages("ISLR")
mtcars
library(purrr)
library(purrr)
accuracy <- map_df(ks, function(k){
fit <- knn3(y ~ ., data = mnist_27$train, k = k)
y_hat <- predict(fit, mnist_27$train, type = "class")
cm_train <- confusionMatrix(data = y_hat, reference = mnist_27$train$y)
train_error <- cm_train$overall["Accuracy"]
y_hat <- predict(fit, mnist_27$test, type = "class")
cm_test <- confusionMatrix(data = y_hat, reference = mnist_27$test$y)
test_error <- cm_test$overall["Accuracy"]
tibble(train = train_error, test = test_error)
})
ks <- seq(3, 251, 2)
library(purrr)
accuracy <- map_df(ks, function(k){
fit <- knn3(y ~ ., data = mnist_27$train, k = k)
y_hat <- predict(fit, mnist_27$train, type = "class")
cm_train <- confusionMatrix(data = y_hat, reference = mnist_27$train$y)
train_error <- cm_train$overall["Accuracy"]
y_hat <- predict(fit, mnist_27$test, type = "class")
cm_test <- confusionMatrix(data = y_hat, reference = mnist_27$test$y)
test_error <- cm_test$overall["Accuracy"]
tibble(train = train_error, test = test_error)
})
library(purrr)
accuracy <- map_df(ks, function(k){
fit <- knn3(y ~ ., data = mnist_27$train, k = k)
y_hat <- predict(fit, mnist_27$train, type = "class")
cm_train <- confusionMatrix(data = y_hat, reference = mnist_27$train$y)
train_error <- cm_train$overall["Accuracy"]
y_hat <- predict(fit, mnist_27$test, type = "class")
cm_test <- confusionMatrix(data = y_hat, reference = mnist_27$test$y)
test_error <- cm_test$overall["Accuracy"]
tibble(train = train_error, test = test_error)
})
librry(caret)
library(caret)
library(purrr)
accuracy <- map_df(ks, function(k){
fit <- knn3(y ~ ., data = mnist_27$train, k = k)
y_hat <- predict(fit, mnist_27$train, type = "class")
cm_train <- confusionMatrix(data = y_hat, reference = mnist_27$train$y)
train_error <- cm_train$overall["Accuracy"]
y_hat <- predict(fit, mnist_27$test, type = "class")
cm_test <- confusionMatrix(data = y_hat, reference = mnist_27$test$y)
test_error <- cm_test$overall["Accuracy"]
tibble(train = train_error, test = test_error)
})
library(dslabs)
data("mnist_27")
library(purrr)
accuracy <- map_df(ks, function(k){
fit <- knn3(y ~ ., data = mnist_27$train, k = k)
y_hat <- predict(fit, mnist_27$train, type = "class")
cm_train <- confusionMatrix(data = y_hat, reference = mnist_27$train$y)
train_error <- cm_train$overall["Accuracy"]
y_hat <- predict(fit, mnist_27$test, type = "class")
cm_test <- confusionMatrix(data = y_hat, reference = mnist_27$test$y)
test_error <- cm_test$overall["Accuracy"]
tibble(train = train_error, test = test_error)
})
library(tidyverse)
library(purrr)
accuracy <- map_df(ks, function(k){
fit <- knn3(y ~ ., data = mnist_27$train, k = k)
y_hat <- predict(fit, mnist_27$train, type = "class")
cm_train <- confusionMatrix(data = y_hat, reference = mnist_27$train$y)
train_error <- cm_train$overall["Accuracy"]
y_hat <- predict(fit, mnist_27$test, type = "class")
cm_test <- confusionMatrix(data = y_hat, reference = mnist_27$test$y)
test_error <- cm_test$overall["Accuracy"]
tibble(train = train_error, test = test_error)
})
accuracy %>% mutate(k = ks) %>%
gather(set, accuracy, -k) %>%
mutate(set = factor(set, levels = c("train", "test"))) %>%
ggplot(aes(k, accuracy, color = set)) +
geom_line() +
geom_point()
library(caret)
modelLookup("knn")
getModelInfo("knn")
library(tidyverse)
library(dslabs)
data("mnist_27")
library(caret)
train_glm <- train(y ~ ., method = "glm", data = mnist_27$train)
train_knn <- train(y ~ ., method = "knn", data = mnist_27$train)
y_hat_glm <- predict(train_glm, mnist_27$test, type = "raw")
y_hat_knn <- predict(train_knn, mnist_27$test, type = "raw")
train_glm
y_hat_glm
ggplot(train_knn, highlight = TRUE)
(9+67)
data.frame(k = seq(3, 251, 2))
dim(data.frame(k = seq(3, 251, 2)))
125*25
set.seed(2008)
train_knn <- train(y ~ ., method = "knn",
data = mnist_27$train,
tuneGrid = data.frame(k = seq(2, 251, 2)))
ggplot(train_knn, highlight = TRUE)
train_knn$bestTune
train_knn$finalModel
confusionMatrix(predict(train_knn, mnist_27$test, type = "raw"),
mnist_27$test$y)$overall["Accuracy"]
control <- trainControl(method = "cv", number = 10, p = .9)
train_knn_cv <- train(y ~ ., method = "knn",
data = mnist_27$train,
tuneGrid = data.frame(k = seq(9, 71, 2)),
trControl = control)
ggplot(train_knn_cv, highlight = TRUE)
plot_cond_prob <- function(p_hat=NULL){
tmp <- mnist_27$true_p
if(!is.null(p_hat)){
tmp <- mutate(tmp, p=p_hat)
}
tmp %>% ggplot(aes(x_1, x_2, z=p, fill=p)) +
geom_raster(show.legend = FALSE) +
scale_fill_gradientn(colors=c("#F8766D","white","#00BFC4")) +
stat_contour(breaks=c(0.5),color="black")
}
plot_cond_prob <- function(p_hat=NULL){
tmp <- mnist_27$true_p
if(!is.null(p_hat)){
tmp <- mutate(tmp, p=p_hat)
}
tmp %>% ggplot(aes(x_1, x_2, z=p, fill=p)) +
geom_raster(show.legend = FALSE) +
scale_fill_gradientn(colors=c("#F8766D","white","#00BFC4")) +
stat_contour(breaks=c(0.5),color="black")
}
modelLookup("gamLoess")
install.packages("gam")
library(gam)
?loess
grid <- expand.grid(span = seq(0.15, 0.65, len = 10), degree = 1)
grid
train_loess <- train(y ~ .,
method = "gamLoess",
tuneGrid=grid,
data = mnist_27$train)
ggplot(train_loess, highlight = TRUE)
confusionMatrix(data = predict(train_loess, mnist_27$test),
reference = mnist_27$test$y)$overall["Accuracy"]
